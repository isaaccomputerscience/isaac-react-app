import { Immutable } from "immer";
import {
  ContentBaseDTO,
  ContentDTO,
  DetailedEventBookingDTO as AutoGeneratedDetailedEventBookingDTO,
  ImageDTO,
  QuestionValidationResponseDTO,
  UserSummaryWithEmailAddressAndGenderDTO,
  ParsonsChoiceDTO as AutoGeneratedParsonsChoiceDTO,
  ParsonsItemDTO,
  IsaacEventPageDTO as AutoGeneratedIsaacEventPageDTO,
  MisuseStatisticDTO as AutoGeneratedMisuseStatisticDTO,
  AssignmentStatusDTO as AutoGeneratedAssignmentStatusDTO,
} from "./IsaacApiTypesAutoGenerated";

export interface AnsweredQuestionsByDate {
  [date: string]: number;
}

export interface TestCaseDTO extends QuestionValidationResponseDTO {
  expected?: boolean;
}

export interface TOTPSharedSecret {
  userId: number;
  sharedSecret: string;
  created: EpochTimeStamp;
}

// TODO move hiding past bast attempts into the backend for more flexibility
// We use `null` to mean "best attempt hidden" so that all checks for whether `bestAttempt` is defined automatically
// return false if it's hidden, without having to wrap all of these checks in an `isDefinedOrHidden()` predicate.
// This latter approach would be more principled however. As it is, we make it clear at the type level that BestAttemptHidden
// is "null with meaning" which should be fine for now, especially if we move best-attempt-hiding to the backend.
export type BestAttemptHidden = null;
export const BEST_ATTEMPT_HIDDEN: BestAttemptHidden = null;
export interface QuestionDTO extends ContentDTO {
  hints?: ContentBaseDTO[];
  bestAttempt?: Immutable<QuestionValidationResponseDTO> | BestAttemptHidden;
}

export interface ParsonsChoiceDTO extends AutoGeneratedParsonsChoiceDTO {
  items?: ParsonsItemDTO[];
}

export interface DetailedEventBookingDTO extends AutoGeneratedDetailedEventBookingDTO {
  userBooked?: UserSummaryWithEmailAddressAndGenderDTO;
}

export interface IsaacEventPageDTO extends AutoGeneratedIsaacEventPageDTO {
  // We don't want to use event thumbnail alt text for WCAG compliance (it's a decorative image, and conveys no meaning)
  eventThumbnail?: Omit<ImageDTO, "altText">;
  children?: ContentDTO[];
}

// temporary changes to the MisuseStatisticDTO and AssignmentStatusDTO until typescript generator plugin is correctly giving required properties
export interface MisuseStatisticDTO extends AutoGeneratedMisuseStatisticDTO {
  agentIdentifier: string;
  eventType: string;
  isMisused: boolean;
  isOverSoftThreshold: boolean;
  currentCounter: number;
}

export interface AssignmentStatusDTO extends AutoGeneratedAssignmentStatusDTO {
  groupId: number;
}
